using System;
using classes;

namespace thatsOK

/*Дан файл с информацией о родственниках. Файл считается заведомо корректным (проверки на "дурака" делать не нужно). Формат файла следующий:
* на первой строке задан порядок полей. Набор полей фиксированный: Id, LastName, FirstName и BirthDate. Однако порядок может меняться. Например, в первой строке может быть записан как
Id;LastName;FirstName;BirthDate
так и
FirstName;Id;BirthDate;LastName
в любых комбинациях
* далее идет неизвестное кол-во строк, в которых задаются данные людей в порядке, описанном в первой строке файла.
* после пустой строки идет описание отношений между людьми. Возможные типы отношений: spouse - супруг/супруга, parent - родитель, sibling - брат/сестра.
Формат строки с отшениями: по обе стороны от оператор "<->" задаются люди, которые состоят в отношениях, после знака равенства идет тип отношений, в которых эти люди состоят.

Задание:
1) разработать объектную модель по описанию выше
2) считать данные из файла и сохранить в объекты
3) разработать метод, чтобы для каждого человека можно было узнать в каком типе отношений он состоит с другим человеком. Например, у файла ниже для людей с Id 1 и 2 должен вернуться тип "sibling", хотя этого не было указано в файле явно.

Пример файла:

НАЧАЛОФАЙЛА
Id;LastName;FirstName;BirthDate
1;Иванов;Иван;01.01.1990
2;Иванова;Мария;01.05.1998
3;Иванов;Петр;01.01.1980
4;Иванова;Ольга;01.01.1971
5;Петрова;Маргарита;01.01.1972
6;Иванов;Олег;02.03.1995

3<->4=spouse
3<->1=parent
4<->1=parent
5<->3=sibling
6<->4=sibling
КОНЕЦФАЙЛА*/
{
    class Program
    {       
        static readonly int hui = Reader.TextReader();
        static void Main(string[] args)
        {
            
            Console.WriteLine(hui);

            Person[] people = new Person[hui];
            people = Reader.GetData(people);
        }
    }
}
